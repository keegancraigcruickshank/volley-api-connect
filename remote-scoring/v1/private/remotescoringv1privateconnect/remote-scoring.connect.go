// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: remote-scoring/v1/private/remote-scoring.proto

package remotescoringv1privateconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	private "github.com/keegancraigcruickshank/volley-api-connect/remote-scoring/v1/private"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// PrivateRemoteScoringServiceName is the fully-qualified name of the PrivateRemoteScoringService
	// service.
	PrivateRemoteScoringServiceName = "remote_scoring.v1.private.PrivateRemoteScoringService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// PrivateRemoteScoringServiceUploadScoreProcedure is the fully-qualified name of the
	// PrivateRemoteScoringService's UploadScore RPC.
	PrivateRemoteScoringServiceUploadScoreProcedure = "/remote_scoring.v1.private.PrivateRemoteScoringService/UploadScore"
	// PrivateRemoteScoringServiceListScoresProcedure is the fully-qualified name of the
	// PrivateRemoteScoringService's ListScores RPC.
	PrivateRemoteScoringServiceListScoresProcedure = "/remote_scoring.v1.private.PrivateRemoteScoringService/ListScores"
)

// PrivateRemoteScoringServiceClient is a client for the
// remote_scoring.v1.private.PrivateRemoteScoringService service.
type PrivateRemoteScoringServiceClient interface {
	UploadScore(context.Context, *connect_go.Request[private.UploadScoreRequest]) (*connect_go.Response[private.UploadScoreResponse], error)
	ListScores(context.Context, *connect_go.Request[private.ListScoresRequest]) (*connect_go.Response[private.ListScoresResponse], error)
}

// NewPrivateRemoteScoringServiceClient constructs a client for the
// remote_scoring.v1.private.PrivateRemoteScoringService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewPrivateRemoteScoringServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) PrivateRemoteScoringServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &privateRemoteScoringServiceClient{
		uploadScore: connect_go.NewClient[private.UploadScoreRequest, private.UploadScoreResponse](
			httpClient,
			baseURL+PrivateRemoteScoringServiceUploadScoreProcedure,
			opts...,
		),
		listScores: connect_go.NewClient[private.ListScoresRequest, private.ListScoresResponse](
			httpClient,
			baseURL+PrivateRemoteScoringServiceListScoresProcedure,
			opts...,
		),
	}
}

// privateRemoteScoringServiceClient implements PrivateRemoteScoringServiceClient.
type privateRemoteScoringServiceClient struct {
	uploadScore *connect_go.Client[private.UploadScoreRequest, private.UploadScoreResponse]
	listScores  *connect_go.Client[private.ListScoresRequest, private.ListScoresResponse]
}

// UploadScore calls remote_scoring.v1.private.PrivateRemoteScoringService.UploadScore.
func (c *privateRemoteScoringServiceClient) UploadScore(ctx context.Context, req *connect_go.Request[private.UploadScoreRequest]) (*connect_go.Response[private.UploadScoreResponse], error) {
	return c.uploadScore.CallUnary(ctx, req)
}

// ListScores calls remote_scoring.v1.private.PrivateRemoteScoringService.ListScores.
func (c *privateRemoteScoringServiceClient) ListScores(ctx context.Context, req *connect_go.Request[private.ListScoresRequest]) (*connect_go.Response[private.ListScoresResponse], error) {
	return c.listScores.CallUnary(ctx, req)
}

// PrivateRemoteScoringServiceHandler is an implementation of the
// remote_scoring.v1.private.PrivateRemoteScoringService service.
type PrivateRemoteScoringServiceHandler interface {
	UploadScore(context.Context, *connect_go.Request[private.UploadScoreRequest]) (*connect_go.Response[private.UploadScoreResponse], error)
	ListScores(context.Context, *connect_go.Request[private.ListScoresRequest]) (*connect_go.Response[private.ListScoresResponse], error)
}

// NewPrivateRemoteScoringServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewPrivateRemoteScoringServiceHandler(svc PrivateRemoteScoringServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	privateRemoteScoringServiceUploadScoreHandler := connect_go.NewUnaryHandler(
		PrivateRemoteScoringServiceUploadScoreProcedure,
		svc.UploadScore,
		opts...,
	)
	privateRemoteScoringServiceListScoresHandler := connect_go.NewUnaryHandler(
		PrivateRemoteScoringServiceListScoresProcedure,
		svc.ListScores,
		opts...,
	)
	return "/remote_scoring.v1.private.PrivateRemoteScoringService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case PrivateRemoteScoringServiceUploadScoreProcedure:
			privateRemoteScoringServiceUploadScoreHandler.ServeHTTP(w, r)
		case PrivateRemoteScoringServiceListScoresProcedure:
			privateRemoteScoringServiceListScoresHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedPrivateRemoteScoringServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedPrivateRemoteScoringServiceHandler struct{}

func (UnimplementedPrivateRemoteScoringServiceHandler) UploadScore(context.Context, *connect_go.Request[private.UploadScoreRequest]) (*connect_go.Response[private.UploadScoreResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("remote_scoring.v1.private.PrivateRemoteScoringService.UploadScore is not implemented"))
}

func (UnimplementedPrivateRemoteScoringServiceHandler) ListScores(context.Context, *connect_go.Request[private.ListScoresRequest]) (*connect_go.Response[private.ListScoresResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("remote_scoring.v1.private.PrivateRemoteScoringService.ListScores is not implemented"))
}
