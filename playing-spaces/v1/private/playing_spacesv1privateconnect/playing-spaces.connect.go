// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: playing-spaces/v1/private/playing-spaces.proto

package playing_spacesv1privateconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	private "github.com/keegancraigcruickshank/volley-api-connect/playing_spaces/v1/private"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// PrivatePlayingSpacesServiceName is the fully-qualified name of the PrivatePlayingSpacesService
	// service.
	PrivatePlayingSpacesServiceName = "playing_spaces.v1.private.PrivatePlayingSpacesService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// PrivatePlayingSpacesServiceListPlayingSpacesProcedure is the fully-qualified name of the
	// PrivatePlayingSpacesService's ListPlayingSpaces RPC.
	PrivatePlayingSpacesServiceListPlayingSpacesProcedure = "/playing_spaces.v1.private.PrivatePlayingSpacesService/ListPlayingSpaces"
	// PrivatePlayingSpacesServiceCreatePlayingSpaceProcedure is the fully-qualified name of the
	// PrivatePlayingSpacesService's CreatePlayingSpace RPC.
	PrivatePlayingSpacesServiceCreatePlayingSpaceProcedure = "/playing_spaces.v1.private.PrivatePlayingSpacesService/CreatePlayingSpace"
	// PrivatePlayingSpacesServiceRemovePlayingSpacesProcedure is the fully-qualified name of the
	// PrivatePlayingSpacesService's RemovePlayingSpaces RPC.
	PrivatePlayingSpacesServiceRemovePlayingSpacesProcedure = "/playing_spaces.v1.private.PrivatePlayingSpacesService/RemovePlayingSpaces"
	// PrivatePlayingSpacesServiceModifyPlayingSpaceProcedure is the fully-qualified name of the
	// PrivatePlayingSpacesService's ModifyPlayingSpace RPC.
	PrivatePlayingSpacesServiceModifyPlayingSpaceProcedure = "/playing_spaces.v1.private.PrivatePlayingSpacesService/ModifyPlayingSpace"
)

// PrivatePlayingSpacesServiceClient is a client for the
// playing_spaces.v1.private.PrivatePlayingSpacesService service.
type PrivatePlayingSpacesServiceClient interface {
	ListPlayingSpaces(context.Context, *connect_go.Request[private.ListPlayingSpacesRequest]) (*connect_go.Response[private.ListPlayingSpacesResponse], error)
	CreatePlayingSpace(context.Context, *connect_go.Request[private.CreatePlayingSpaceRequest]) (*connect_go.Response[private.CreatePlayingSpaceResponse], error)
	RemovePlayingSpaces(context.Context, *connect_go.Request[private.RemovePlayingSpacesRequest]) (*connect_go.Response[private.RemovePlayingSpacesResponse], error)
	ModifyPlayingSpace(context.Context, *connect_go.Request[private.ModifyPlayingSpaceRequest]) (*connect_go.Response[private.ModifyPlayingSpaceResponse], error)
}

// NewPrivatePlayingSpacesServiceClient constructs a client for the
// playing_spaces.v1.private.PrivatePlayingSpacesService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewPrivatePlayingSpacesServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) PrivatePlayingSpacesServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &privatePlayingSpacesServiceClient{
		listPlayingSpaces: connect_go.NewClient[private.ListPlayingSpacesRequest, private.ListPlayingSpacesResponse](
			httpClient,
			baseURL+PrivatePlayingSpacesServiceListPlayingSpacesProcedure,
			opts...,
		),
		createPlayingSpace: connect_go.NewClient[private.CreatePlayingSpaceRequest, private.CreatePlayingSpaceResponse](
			httpClient,
			baseURL+PrivatePlayingSpacesServiceCreatePlayingSpaceProcedure,
			opts...,
		),
		removePlayingSpaces: connect_go.NewClient[private.RemovePlayingSpacesRequest, private.RemovePlayingSpacesResponse](
			httpClient,
			baseURL+PrivatePlayingSpacesServiceRemovePlayingSpacesProcedure,
			opts...,
		),
		modifyPlayingSpace: connect_go.NewClient[private.ModifyPlayingSpaceRequest, private.ModifyPlayingSpaceResponse](
			httpClient,
			baseURL+PrivatePlayingSpacesServiceModifyPlayingSpaceProcedure,
			opts...,
		),
	}
}

// privatePlayingSpacesServiceClient implements PrivatePlayingSpacesServiceClient.
type privatePlayingSpacesServiceClient struct {
	listPlayingSpaces   *connect_go.Client[private.ListPlayingSpacesRequest, private.ListPlayingSpacesResponse]
	createPlayingSpace  *connect_go.Client[private.CreatePlayingSpaceRequest, private.CreatePlayingSpaceResponse]
	removePlayingSpaces *connect_go.Client[private.RemovePlayingSpacesRequest, private.RemovePlayingSpacesResponse]
	modifyPlayingSpace  *connect_go.Client[private.ModifyPlayingSpaceRequest, private.ModifyPlayingSpaceResponse]
}

// ListPlayingSpaces calls playing_spaces.v1.private.PrivatePlayingSpacesService.ListPlayingSpaces.
func (c *privatePlayingSpacesServiceClient) ListPlayingSpaces(ctx context.Context, req *connect_go.Request[private.ListPlayingSpacesRequest]) (*connect_go.Response[private.ListPlayingSpacesResponse], error) {
	return c.listPlayingSpaces.CallUnary(ctx, req)
}

// CreatePlayingSpace calls
// playing_spaces.v1.private.PrivatePlayingSpacesService.CreatePlayingSpace.
func (c *privatePlayingSpacesServiceClient) CreatePlayingSpace(ctx context.Context, req *connect_go.Request[private.CreatePlayingSpaceRequest]) (*connect_go.Response[private.CreatePlayingSpaceResponse], error) {
	return c.createPlayingSpace.CallUnary(ctx, req)
}

// RemovePlayingSpaces calls
// playing_spaces.v1.private.PrivatePlayingSpacesService.RemovePlayingSpaces.
func (c *privatePlayingSpacesServiceClient) RemovePlayingSpaces(ctx context.Context, req *connect_go.Request[private.RemovePlayingSpacesRequest]) (*connect_go.Response[private.RemovePlayingSpacesResponse], error) {
	return c.removePlayingSpaces.CallUnary(ctx, req)
}

// ModifyPlayingSpace calls
// playing_spaces.v1.private.PrivatePlayingSpacesService.ModifyPlayingSpace.
func (c *privatePlayingSpacesServiceClient) ModifyPlayingSpace(ctx context.Context, req *connect_go.Request[private.ModifyPlayingSpaceRequest]) (*connect_go.Response[private.ModifyPlayingSpaceResponse], error) {
	return c.modifyPlayingSpace.CallUnary(ctx, req)
}

// PrivatePlayingSpacesServiceHandler is an implementation of the
// playing_spaces.v1.private.PrivatePlayingSpacesService service.
type PrivatePlayingSpacesServiceHandler interface {
	ListPlayingSpaces(context.Context, *connect_go.Request[private.ListPlayingSpacesRequest]) (*connect_go.Response[private.ListPlayingSpacesResponse], error)
	CreatePlayingSpace(context.Context, *connect_go.Request[private.CreatePlayingSpaceRequest]) (*connect_go.Response[private.CreatePlayingSpaceResponse], error)
	RemovePlayingSpaces(context.Context, *connect_go.Request[private.RemovePlayingSpacesRequest]) (*connect_go.Response[private.RemovePlayingSpacesResponse], error)
	ModifyPlayingSpace(context.Context, *connect_go.Request[private.ModifyPlayingSpaceRequest]) (*connect_go.Response[private.ModifyPlayingSpaceResponse], error)
}

// NewPrivatePlayingSpacesServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewPrivatePlayingSpacesServiceHandler(svc PrivatePlayingSpacesServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	privatePlayingSpacesServiceListPlayingSpacesHandler := connect_go.NewUnaryHandler(
		PrivatePlayingSpacesServiceListPlayingSpacesProcedure,
		svc.ListPlayingSpaces,
		opts...,
	)
	privatePlayingSpacesServiceCreatePlayingSpaceHandler := connect_go.NewUnaryHandler(
		PrivatePlayingSpacesServiceCreatePlayingSpaceProcedure,
		svc.CreatePlayingSpace,
		opts...,
	)
	privatePlayingSpacesServiceRemovePlayingSpacesHandler := connect_go.NewUnaryHandler(
		PrivatePlayingSpacesServiceRemovePlayingSpacesProcedure,
		svc.RemovePlayingSpaces,
		opts...,
	)
	privatePlayingSpacesServiceModifyPlayingSpaceHandler := connect_go.NewUnaryHandler(
		PrivatePlayingSpacesServiceModifyPlayingSpaceProcedure,
		svc.ModifyPlayingSpace,
		opts...,
	)
	return "/playing_spaces.v1.private.PrivatePlayingSpacesService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case PrivatePlayingSpacesServiceListPlayingSpacesProcedure:
			privatePlayingSpacesServiceListPlayingSpacesHandler.ServeHTTP(w, r)
		case PrivatePlayingSpacesServiceCreatePlayingSpaceProcedure:
			privatePlayingSpacesServiceCreatePlayingSpaceHandler.ServeHTTP(w, r)
		case PrivatePlayingSpacesServiceRemovePlayingSpacesProcedure:
			privatePlayingSpacesServiceRemovePlayingSpacesHandler.ServeHTTP(w, r)
		case PrivatePlayingSpacesServiceModifyPlayingSpaceProcedure:
			privatePlayingSpacesServiceModifyPlayingSpaceHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedPrivatePlayingSpacesServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedPrivatePlayingSpacesServiceHandler struct{}

func (UnimplementedPrivatePlayingSpacesServiceHandler) ListPlayingSpaces(context.Context, *connect_go.Request[private.ListPlayingSpacesRequest]) (*connect_go.Response[private.ListPlayingSpacesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("playing_spaces.v1.private.PrivatePlayingSpacesService.ListPlayingSpaces is not implemented"))
}

func (UnimplementedPrivatePlayingSpacesServiceHandler) CreatePlayingSpace(context.Context, *connect_go.Request[private.CreatePlayingSpaceRequest]) (*connect_go.Response[private.CreatePlayingSpaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("playing_spaces.v1.private.PrivatePlayingSpacesService.CreatePlayingSpace is not implemented"))
}

func (UnimplementedPrivatePlayingSpacesServiceHandler) RemovePlayingSpaces(context.Context, *connect_go.Request[private.RemovePlayingSpacesRequest]) (*connect_go.Response[private.RemovePlayingSpacesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("playing_spaces.v1.private.PrivatePlayingSpacesService.RemovePlayingSpaces is not implemented"))
}

func (UnimplementedPrivatePlayingSpacesServiceHandler) ModifyPlayingSpace(context.Context, *connect_go.Request[private.ModifyPlayingSpaceRequest]) (*connect_go.Response[private.ModifyPlayingSpaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("playing_spaces.v1.private.PrivatePlayingSpacesService.ModifyPlayingSpace is not implemented"))
}
